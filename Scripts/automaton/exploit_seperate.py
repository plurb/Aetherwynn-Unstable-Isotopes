# DOESN'T WORk

import re

level_lookup = [
    "*1st-level Exploit*  \n",
    "*2nd-level Exploit*  \n",
    "*3rd-level Exploit*  \n",
    "*4th-level Exploit*  \n",
    "*5th-level Exploit*  \n"
]


def lines():
    with open("Exploits/Fighter Exploit List.md") as f:
        lines = f.readlines()

        exploit_names = [
            e
            for e in lines
            if e.startswith("###")
        ]

        exploit_levels = [
            l
            for l in lines
            if l in level_lookup
        ]

        exploit_tempos = [
            t
            for t in lines
            if t.startswith("**Tempo:**")
        ]

        exploit_ranges = [
            r
            for r in lines
            if r.startswith("**Range:**")
        ]

        exploit_matss = [
            ms
            for ms in lines
            if ms.startswith("**Materials:**")
        ]

        exploit_durations = [
            d
            for d in lines
            if d.startswith("**Duration:**")
        ]

        data = zip(exploit_names, exploit_levels, exploit_tempos, exploit_ranges, exploit_matss, exploit_durations)

        for desc in data:
            fname = desc[0].replace("### ", '').replace("\n", '')
            bitch = open(f"Exploits/Exploits/{fname}.md", 'w')
            bitch.writelines(desc)
            bitch.close()

        for (i, line) in enumerate(lines):
            if line in exploit_names:
                cursor = i + 1
                while line[cursor] not in exploit_names:
                    pass


def findHeader(search: str, text: str):
    r = re.compile(r"(?<!#)# " + search + r"(?:(?!(?<!#)# )[\s\S])+")
    return r.findall(text)


if __name__ == '__main__':
    with open("Exploits/Fighter Exploit List.md") as f:
        l = findHeader("", f.read())
        print(l[0])
